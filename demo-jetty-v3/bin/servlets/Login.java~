package servlets;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpSession;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.BufferedReader;
import java.util.Enumeration;
import java.net.URLDecoder;

import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import java.util.Date;
import java.util.TimeZone;
import java.util.GregorianCalendar;
import java.text.SimpleDateFormat;

import db.Users;
import db.Project;
import db.Project-tuple;
import db.UsersException;
import db.UsersProjectsManager;
import db.UserDB;


/**
 *
 * Edit and add user using forms.
 *
 * @author Olanrewaju Okunlola
 */
public class Login extends HttpServlet {
    private util.HTMLTemplates html;
    private Users usr;

    private SimpleDateFormat dtFormat;

    @Override
    protected void doGet(
        HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException
    {
        log( request.getRequestURI() );
        util.HTTPUtils.nocache( response );
        String context = request.getContextPath();

        String user = request.getRemoteUser();
        HttpSession session = request.getSession(true);
        /*
         * Check if the remoteUser has the correct role.
         */
         
        if (  request.isUserInRole("admin") ) {
        	    response.Cookies("username")=user;
            response.sendRedirect( context + "admin/adminprojects" );
             
            return;
        } else
        	if (  request.isUserInRole("user") ) {
        		 response.Cookies("username")=user;
            response.sendRedirect( context + "project/project-list" );
            HttpSession session = request.getSession(true);
           
            return;
        } else {
        	
        	   response.sendError( HttpServletResponse.SC_FORBIDDEN, "No premission");
            return;
        	
        	}
        if ( bpm == null ) {
            response.sendRedirect( context + Constants.DB_ERR_PAGE );
            return;
        }
        
    }

    @Override
    protected void doPost( 
        HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException
    {
        log( request.getRequestURI() );
        util.HTTPUtils.nocache( response );
        PrintWriter out = response.getWriter();
        String user = request.getRemoteUser();
        String context = request.getContextPath();

        
        /*
         * Redirect to redisplay the edited data.
         *
         * Note: this will not be necessary when AJAX is used.
         */
        String servletPath = request.getServletPath();
        response.sendRedirect( context + servletPath );
    }

    @Override
    public void init(ServletConfig config) throws ServletException {
        super.init( config ); // super.init call is required
        html = util.HTMLTemplates.newHTMLTemplates( this );
        dtFormat = new SimpleDateFormat("yy/MM/dd HH:mm");
        dtFormat.setTimeZone( TimeZone.getDefault() );
        Date twentyFirstCentury = new GregorianCalendar(2001,1,1).getTime();
        dtFormat.set2DigitYearStart( twentyFirstCentury );
        try {
            usr = new UserDB( Constants.DB_PATH );
        }
        catch( UserException ex ) {
            bpm = null;
            log( ex.getMessage() );
        }
    }
}
